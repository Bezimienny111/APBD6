// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebApplication1.Model;

namespace WebApplication1.Migrations
{
    [DbContext(typeof(CFContext))]
    partial class CFContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.6")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("WebApplication1.Model.Doctor", b =>
                {
                    b.Property<int>("IdDoctor")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("IdDoctor")
                        .HasName("Doctor_PK");

                    b.ToTable("Doctor");

                    b.HasData(
                        new
                        {
                            IdDoctor = 1,
                            Email = "0dot25l@gmail.com",
                            FirstName = "Jan",
                            LastName = "Sobieski"
                        },
                        new
                        {
                            IdDoctor = 2,
                            Email = "0dot50l@gmail.com",
                            FirstName = "Pan",
                            LastName = "Tadeusz"
                        });
                });

            modelBuilder.Entity("WebApplication1.Model.Medicament", b =>
                {
                    b.Property<int>("IdMedicament")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("IdMedicament")
                        .HasName("Medicament_PK");

                    b.ToTable("Medicament");

                    b.HasData(
                        new
                        {
                            IdMedicament = 10,
                            Description = "z ABPD",
                            Name = "ITN",
                            Type = "Dropsy"
                        },
                        new
                        {
                            IdMedicament = 20,
                            Description = " to ITN",
                            Name = "APBD",
                            Type = "Turbo dropsy"
                        },
                        new
                        {
                            IdMedicament = 40,
                            Description = "po co",
                            Name = "DTO",
                            Type = "Alkohol"
                        });
                });

            modelBuilder.Entity("WebApplication1.Model.Patient", b =>
                {
                    b.Property<int>("IdPatient")
                        .HasColumnType("int");

                    b.Property<DateTime>("Birthdate")
                        .HasColumnType("datetime2");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("IdPatient")
                        .HasName("Patient_PK");

                    b.ToTable("Patient");

                    b.HasData(
                        new
                        {
                            IdPatient = 0,
                            Birthdate = new DateTime(1993, 1, 5, 0, 0, 0, 0, DateTimeKind.Local),
                            FirstName = "aaa",
                            LastName = "bbb"
                        },
                        new
                        {
                            IdPatient = 1,
                            Birthdate = new DateTime(1993, 1, 5, 0, 0, 0, 0, DateTimeKind.Local),
                            FirstName = "ccc",
                            LastName = "ddd"
                        },
                        new
                        {
                            IdPatient = 2,
                            Birthdate = new DateTime(1993, 1, 5, 0, 0, 0, 0, DateTimeKind.Local),
                            FirstName = "eee",
                            LastName = "fff"
                        },
                        new
                        {
                            IdPatient = 3,
                            Birthdate = new DateTime(1993, 1, 5, 0, 0, 0, 0, DateTimeKind.Local),
                            FirstName = "ggg",
                            LastName = "hhh"
                        });
                });

            modelBuilder.Entity("WebApplication1.Model.Prescription", b =>
                {
                    b.Property<int>("IdPrescription")
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DueDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdDoctor")
                        .HasColumnType("int");

                    b.Property<int>("IdPatient")
                        .HasColumnType("int");

                    b.HasKey("IdPrescription")
                        .HasName("Prescritpion_PK");

                    b.HasIndex("IdDoctor");

                    b.HasIndex("IdPatient");

                    b.ToTable("Prescription");

                    b.HasData(
                        new
                        {
                            IdPrescription = 111,
                            Date = new DateTime(2021, 6, 6, 0, 0, 0, 0, DateTimeKind.Local),
                            DueDate = new DateTime(2050, 6, 1, 0, 0, 0, 0, DateTimeKind.Local),
                            IdDoctor = 1,
                            IdPatient = 0
                        },
                        new
                        {
                            IdPrescription = 112,
                            Date = new DateTime(2021, 6, 6, 0, 0, 0, 0, DateTimeKind.Local),
                            DueDate = new DateTime(2050, 6, 1, 0, 0, 0, 0, DateTimeKind.Local),
                            IdDoctor = 1,
                            IdPatient = 1
                        },
                        new
                        {
                            IdPrescription = 113,
                            Date = new DateTime(2021, 6, 6, 0, 0, 0, 0, DateTimeKind.Local),
                            DueDate = new DateTime(2050, 6, 1, 0, 0, 0, 0, DateTimeKind.Local),
                            IdDoctor = 1,
                            IdPatient = 2
                        },
                        new
                        {
                            IdPrescription = 114,
                            Date = new DateTime(2021, 6, 6, 0, 0, 0, 0, DateTimeKind.Local),
                            DueDate = new DateTime(2050, 7, 1, 0, 0, 0, 0, DateTimeKind.Local),
                            IdDoctor = 2,
                            IdPatient = 3
                        });
                });

            modelBuilder.Entity("WebApplication1.Model.Prescription_Medicament", b =>
                {
                    b.Property<int>("IdMedicament")
                        .HasColumnType("int");

                    b.Property<int>("IdPrescription")
                        .HasColumnType("int");

                    b.Property<string>("Details")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Dose")
                        .HasColumnType("int");

                    b.HasKey("IdMedicament", "IdPrescription")
                        .HasName("Prescription_Medicament_PK");

                    b.HasIndex("IdPrescription");

                    b.ToTable("Prescription_Medicament");

                    b.HasData(
                        new
                        {
                            IdMedicament = 10,
                            IdPrescription = 112,
                            Details = "Przed cwiczeniami",
                            Dose = 1
                        },
                        new
                        {
                            IdMedicament = 20,
                            IdPrescription = 111,
                            Details = "Przed egzaminem",
                            Dose = 2
                        },
                        new
                        {
                            IdMedicament = 40,
                            IdPrescription = 113,
                            Details = "Po wykładach",
                            Dose = 5
                        },
                        new
                        {
                            IdMedicament = 40,
                            IdPrescription = 114,
                            Details = "Przed APBD",
                            Dose = 200
                        });
                });

            modelBuilder.Entity("WebApplication1.Model.Prescription", b =>
                {
                    b.HasOne("WebApplication1.Model.Doctor", "Doctor")
                        .WithMany("Prescription")
                        .HasForeignKey("IdDoctor")
                        .HasConstraintName("Prescription_Doctor")
                        .IsRequired();

                    b.HasOne("WebApplication1.Model.Patient", "Patient")
                        .WithMany("Prescription")
                        .HasForeignKey("IdPatient")
                        .HasConstraintName("Prescription_Patient")
                        .IsRequired();

                    b.Navigation("Doctor");

                    b.Navigation("Patient");
                });

            modelBuilder.Entity("WebApplication1.Model.Prescription_Medicament", b =>
                {
                    b.HasOne("WebApplication1.Model.Medicament", "Medicament")
                        .WithMany("Medicaments_Prescriptions")
                        .HasForeignKey("IdMedicament")
                        .HasConstraintName("Prescription_Medicament_Medicament")
                        .IsRequired();

                    b.HasOne("WebApplication1.Model.Prescription", "Prescription")
                        .WithMany("Prescription_Medicaments")
                        .HasForeignKey("IdPrescription")
                        .HasConstraintName("Prescription_Medicament_Prescription")
                        .IsRequired();

                    b.Navigation("Medicament");

                    b.Navigation("Prescription");
                });

            modelBuilder.Entity("WebApplication1.Model.Doctor", b =>
                {
                    b.Navigation("Prescription");
                });

            modelBuilder.Entity("WebApplication1.Model.Medicament", b =>
                {
                    b.Navigation("Medicaments_Prescriptions");
                });

            modelBuilder.Entity("WebApplication1.Model.Patient", b =>
                {
                    b.Navigation("Prescription");
                });

            modelBuilder.Entity("WebApplication1.Model.Prescription", b =>
                {
                    b.Navigation("Prescription_Medicaments");
                });
#pragma warning restore 612, 618
        }
    }
}
